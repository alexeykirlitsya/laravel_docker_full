version: '3'

networks:
  laravel:

services:
  site:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: nginx
    ports:
      - '443:443'
      - '80:80'
    volumes:
      - ./src/ssl/:/etc/nginx/certs
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - laravel

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - '3306:3306'
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  # https://hub.docker.com/r/phpmyadmin/phpmyadmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.1.0
    container_name: phpmyadmin
    restart: unless-stopped
    tty: true
    ports:
      - "8081:80"
    environment:
      PMA_HOSTS: mysql
      PMA_USER: homestead
      PMA_PASSWORD: secret
      PMA_ARBITRARY: 1
    networks:
      - laravel
    depends_on:
      - mysql

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: php
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    networks:
      - laravel

  phpredisadmin:
    image: erikdubbelboer/phpredisadmin # https://hub.docker.com/r/erikdubbelboer/phpredisadmin
    container_name: phpredisadmin
    restart: unless-stopped
    environment:
      REDIS_1_HOST: redis
      REDIS_1_NAME: DockerRedis
      REDIS_1_PORT: 6379
    ports:
      - "8082:80"
    networks:
      - laravel
    depends_on:
      - redis

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/html
    ports:
      - '3000:3000'
      - '3001:3001'
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      - laravel

  cron:
    build:
      context: ./dockerfiles
      dockerfile: cron.dockerfile
    container_name: cron
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  worker:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: worker
    restart: always
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - site
      - redis
    working_dir: /var/www/html
    networks:
      - laravel
    command: php /var/www/html/artisan queue:work
